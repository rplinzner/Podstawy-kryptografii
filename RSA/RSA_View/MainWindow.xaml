<Window x:Class="RSA_View.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:RSA_View"
        xmlns:converters="clr-namespace:RSA_View.Converters"
        mc:Ignorable="d"
        Title="RSA Blind Signature" Height="450" Width="800">
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <!--Signing authority-->
        <Border Padding="10" Grid.Column="0" BorderThickness="0 0 2 0" BorderBrush="Black">
            <StackPanel >
                <TextBlock Margin="0 5 0 10" Text="Signing authority" FontWeight="Bold" FontSize="20" TextAlignment="Center"/>
                <Button Margin="60 0" Content="Generate Public and Private Key" Command="{Binding GenerateKeysCommand}"/>
                <TextBlock Margin="0 5" 
                           Text="{Binding AreKeysGenerated, 
                                          FallbackValue='Keys are not generated!', 
                                          Converter={x:Static converters:BooleanToStringConverter.Instance},
                                          ConverterParameter=Keys}" 
                           TextAlignment="Center" 
                           Foreground="{Binding AreKeysGenerated,
                                                FallbackValue=Red, 
                                                Converter={x:Static converters:BooleanToColorConverter.Instance}}"/>
                <TextBlock Margin="0 5" 
                           Text="{Binding IsMessageBlinded, 
                                          FallbackValue='Message is not blinded or is empty!', 
                                          Converter={x:Static converters:BooleanToStringConverter.Instance},
                                          ConverterParameter=Blind}" 
                           TextAlignment="Center" 
                           Foreground="{Binding IsMessageBlinded,
                                                FallbackValue=Red, 
                                                Converter={x:Static converters:BooleanToColorConverter.Instance}}"/>
                <Button Margin="60 0" Content="Generate Blind Sign" IsEnabled="{Binding CanSign}" Command="{Binding SignCommand}"/>
                <TextBlock Margin="0 20 0 10" Text="Generated Blind Sign" FontWeight="Bold" FontSize="13" TextAlignment="Center"/>
                <TextBox Margin="20 0" Height="200" TextWrapping="Wrap" Text="{Binding BlindedSign, Converter={x:Static converters:BigIntegerListToStringConverter.Instance},Mode=TwoWay}"/>
            </StackPanel>
        </Border>
        <!--Message author-->
        <Border Padding="10" Grid.Column="1">
            <StackPanel >
                <TextBlock Margin="0 5 0 10" Text="Message author" FontWeight="Bold" FontSize="20" TextAlignment="Center"/>
                <TextBlock Margin="0 10" Text="Message to sign" FontWeight="Bold" FontSize="13" TextAlignment="Center"/>
                <TextBox Margin="20 0" Height="100" Text="{Binding MessageToSign, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"  TextWrapping="Wrap"/>
                <Button Margin="60 10" Content="Blind the message" Command="{Binding BlindCommand}"/>
                <Button Margin="60 10" Content="Check validation" Command="{Binding CheckValidationCommand}"/>
            </StackPanel>
        </Border>
    </Grid>
</Window>
